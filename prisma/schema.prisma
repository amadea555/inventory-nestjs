// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id			    Int       @id @default(autoincrement())
  name 		    String    @db.VarChar(100)
  email		    String    @db.VarChar(100) @unique
  password	  String    @db.VarChar(255)
  status      Boolean   @default(true)
  level       LevelStatus
  createdAt	  DateTime  @db.Timestamp(6)
  updatedAt	  DateTime? @db.Timestamp(6)
  deletedAt	  DateTime? @db.Timestamp(6)
  otp         String?   @db.VarChar(6)    
  otpExpired  DateTime? @db.Timestamp(6)
  @@map("admins")
}

enum LevelStatus {
  SUPER
  NORMAL
}

model Company {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  email       String    @db.VarChar(100) @unique
  status      Boolean   @default(true)  
  createdAt	  DateTime  @db.Timestamp(6)
  updatedAt	  DateTime? @db.Timestamp(6)
  deletedAt	  DateTime? @db.Timestamp(6)

  companyUsers CompanyUser[]
  @@map("companies")
}

model CompanyUser {
  id			    Int       @id @default(autoincrement())
  name 		    String    @db.VarChar(100)
  email		    String    @db.VarChar(100) @unique
  password	  String    @db.VarChar(255)
  phoneNumber String    @db.VarChar(20)
  companyId   Int
  status      Boolean   @default(true)
  level       LevelStatus
  createdAt	  DateTime  @db.Timestamp(6)
  updatedAt	  DateTime? @db.Timestamp(6)
  deletedAt	  DateTime? @db.Timestamp(6)
  otp         String?   @db.VarChar(6)    
  otpExpired  DateTime? @db.Timestamp(6)

  // relation
  company     Company   @relation(fields: [companyId], references: [id])
  @@map("companyUsers")
}
